#!/bin/bash

Aviso() {
	clear
	echo -e '\n Este e um script de instalacao/configuracao para Ubuntu \n'
	echo -e '\b Sera adicionado alguns GPGs e Repositorios no Ubuntu,'
	echo -e '\b Apos a adicao, ira ser feito um upgrade no sistema para nao haver falhas'
	echo -e '\b Na instalacao de pacotes importantes.'
	echo -e '\b E necessario habilitar manualmente todos os repositorios via \n "Canais de Software" na "Central de programas".\n'
	echo -e '\b Apos isto sera feito instalacoes por secao.\n\n'
	echo -e '\b Tudo o que vou fazer de agora em diante sera por etapa.'
	echo -e '\b Sao 3 etapas. Passando primeiro pela "Compilacao e Manutencao";'
	echo -e '\b A segunda etapa é sobre "Multimedia e Codecs";'
	echo -e '\b E finalmente a terceira e ultima etapa, que e sobre "Itens Opcionais"'
	echo -e '\b Voce pode escolher entre usar a opcao de preferencia, pular ou sair.'
	echo -e '\b Lembre-se de que, qualquer decisao e de sua propria conta e risco.\n\n'
	echo -e '\b Para escolher, aperte a letra em que esta entre parenteses (Maiusculo) \n e aperte "Enter".\n\n'
	echo -e '\b Deseja continuar ou Sair?'
	echo -e '\b Digite (C) para continuar.'
	echo -e '\b Digite (Q) para sair.'
read opcao
case $opcao in
	C) Continuar ;;
	Q) Sair ;;
	*) "Opcao invalida" ; echo ; Aviso ;;
esac
}
Continuar() {
	clear
	echo -e '\n Continuando com a configuracao...'
	read -t 10
	clear
	addgpg
}
Sair() {
	clear
	echo -e '\n Saindo da configuracao...'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	exit 0
}
Aviso

###Inicio addgpg
addgpg() {
	clear
	echo -e '\n Adicionar GPG e Repositorios ao sistema.\n'
	echo -e '\b Ira ser adicionado os seguintes repositorios principais:'
	echo -e '\b Oracle VM VirtualBox. Maquina Virtual.'
	echo -e '\b Depôt MultiSystem. Criador multiboot usb.'
	echo -e '\b videolan. Dependências para media.'
	echo -e '\b Google Chrome e talkplugin. Navegador e plugin do Google.'
#	echo -e '\b Zram. Gerenciamento otimizado da memoria.'
#	echo -e '\b Sysmonitor. Verificacao em porcentagem do consumo do CPU e Memoria.'
	echo -e '\b Remastersys. Programa para backup e remasterizacao do sistema.'
	echo -e '\b Ubuntu Cambrium. Complemento para os repositorios padroes do sistema.'
#	echo -e '\b Ubuntu Games. Jogos e Emuladores.'
	echo -e '\b Wine. Para suporte a arquivos/programas Microsoft\n\n'
	echo -e '\b Adicionar Repositorios (A)'
	echo -e '\b Apenas fazer um upgrade (U)'
	echo -e '\b Pular para a etapa, "Compilacao e Manutencao" (C)'
#	echo -e '\b Pular para a etapa, "Multimedia e Codecs" (M)'
	echo -e '\b Sair da configuracao (Q)'
read opcao
case $opcao in
	A) Adicionar ;;
	U) Upgrade ;;
	C) Compilacao ;;
#	M) MultimediaCodecs ;;
	Q) Sair ;;
	*) "Opcao invalida" ; echo ; addgpg ;;
esac
}
###Inicio Adicionar
Adicionar () {
	clear
	echo -e '\n Adicionar repositorios...'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
#Oracle VM VirtualBox
sudo sh -c 'touch /etc/apt/sources.list.d/virtualbox.list'
sudo sh -c 'rm -rf /etc/apt/sources.list.d/virtualbox.list'
sudo sh -c 'touch /etc/apt/sources.list.d/virtualbox.list'
sudo sh -c 'cat > /etc/apt/sources.list.d/virtualbox.list' <<EOF
#Oracle VM VirtualBox
deb http://download.virtualbox.org/virtualbox/debian $(lsb_release -cs) contrib non-free
EOF
wget -q http://download.virtualbox.org/virtualbox/debian/oracle_vbox.asc -O- | sudo apt-key add -
apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 54422A4B98AB5139
#Depôt MultiSystem
sudo sh -c 'touch /etc/apt/sources.list.d/multisystem.list'
sudo sh -c 'cat > /etc/apt/sources.list.d/multisystem.list' <<EOF
#Depôt MultiSystem, Criador multiboot usb
deb http://liveusb.info/multisystem/depot all main
EOF
wget -q http://liveusb.info/multisystem/depot/multisystem.asc -O- | sudo apt-key add -
##Google-chrome:
sudo sh -c 'touch /etc/apt/sources.list.d/google-chrome.list'
sudo sh -c 'rm -rf /etc/apt/sources.list.d/google-chrome.list'
sudo sh -c 'touch /etc/apt/sources.list.d/google-chrome.list'
sudo sh -c 'cat > /etc/apt/sources.list.d/google-chrome.list' <<EOF
### THIS FILE IS AUTOMATICALLY CONFIGURED ###
# You may comment out this entry, but any other modifications may be lost.
deb http://dl.google.com/linux/chrome/deb/ stable main
EOF
wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
##google-talkplugin_current:
sudo sh -c 'touch /etc/apt/sources.list.d/google-talkplugin.list'
sudo sh -c 'rm -rf /etc/apt/sources.list.d/google-talkplugin.list'
sudo sh -c 'touch /etc/apt/sources.list.d/google-talkplugin.list'
sudo sh -c 'cat > /etc/apt/sources.list.d/google-talkplugin.list' <<EOF
### THIS FILE IS AUTOMATICALLY CONFIGURED ###
# You may comment out this entry, but any other modifications may be lost.
deb http://dl.google.com/linux/talkplugin/deb/ stable main
EOF
wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
#zram
#sudo add-apt-repository -y ppa:shnatsel/zram
#zram quantal saucy trusty
#if (lsb_release -cs | grep -i quantal)
#		then
#sudo sed -i "s/$(lsb_release -cs)/quantal/g" /etc/apt/sources.list.d/shnatsel-zram-$(lsb_release -cs).list
#	else
#if (lsb_release -cs | grep -i saucy)
#		then
#sudo sed -i "s/$(lsb_release -cs)/quantal/g" /etc/apt/sources.list.d/shnatsel-zram-$(lsb_release -cs).list
#	else
#	if (lsb_release -cs | grep -i trusty)
#		then
#sudo sed -i "s/$(lsb_release -cs)/quantal/g" /etc/apt/sources.list.d/shnatsel-zram-$(lsb_release -cs).list
#	else
#	echo -e 'Repositório zram OK!'
#fi
#fi
#fi

#sysmonitor no unity
#sudo add-apt-repository -y ppa:alexeftimie/ppa
##sysmonitor saucy trusty
#if (lsb_release -cs | grep -i saucy)
#		then
#sudo sed -i "s/$(lsb_release -cs)/raring/g" /etc/apt/sources.list.d/alexeftimie-ppa-$(lsb_release -cs).list
#	else
#if (lsb_release -cs | grep -i trusty)
#		then
#sudo sed -i "s/$(lsb_release -cs)/raring/g" /etc/apt/sources.list.d/alexeftimie-ppa-$(lsb_release -cs).list
#	else
#	echo -e 'Repositório sysmonitor OK!'
#fi
#fi

#remastersys (programa para bkp do sistema e criação de livecd atraves do sistema instalado)
#wget -q http://www.remastersys.com/ubuntu/remastersys.gpg.key -O- | sudo apt-key add -
#sudo sh -c 'touch /etc/apt/sources.list.d/remastersys.list'
#sudo sh -c 'rm -rf /etc/apt/sources.list.d/remastersys.list'
#sudo sh -c 'touch /etc/apt/sources.list.d/remastersys.list'
#sudo echo 'deb http://www.remastersys.com/ubuntu precise main' >> /etc/apt/sources.list.d/remastersys.list

#ubuntu cambrium
if (lsb_release -cs | grep -i precise)
	then
sudo sh -c 'touch /etc/apt/sources.list.d/ub-cambrium.list'
sudo sh -c 'rm -rf /etc/apt/sources.list.d/ub-cambrium.list'
sudo sh -c 'touch /etc/apt/sources.list.d/ub-cambrium.list'
sudo sh -c 'cat > /etc/apt/sources.list.d/ub-cambrium.list' <<EOF
#precise universe, para dependencias libx264-120 e outros
deb http://ubuntu.mirror.cambrium.nl/ubuntu/ $(lsb_release -cs) main universe multiverse restricted
deb http://ubuntu.mirror.cambrium.nl/ubuntu/ $(lsb_release -cs)-backports main universe multiverse restricted
deb http://ubuntu.mirror.cambrium.nl/ubuntu/ $(lsb_release -cs)-proposed main universe multiverse restricted
deb http://ubuntu.mirror.cambrium.nl/ubuntu/ $(lsb_release -cs)-security main universe multiverse restricted
deb http://ubuntu.mirror.cambrium.nl/ubuntu/ $(lsb_release -cs)-updates main universe multiverse restricted
EOF
else
sudo sh -c 'touch /etc/apt/sources.list.d/ub-cambrium.list'
sudo sh -c 'rm -rf /etc/apt/sources.list.d/ub-cambrium.list'
sudo sh -c 'touch /etc/apt/sources.list.d/ub-cambrium.list'
sudo sh -c 'cat > /etc/apt/sources.list.d/ub-cambrium.list' <<EOF
#precise universe, para dependencias libx264-120 e outros
deb http://ubuntu.mirror.cambrium.nl/ubuntu/ precise main universe
deb http://ubuntu.mirror.cambrium.nl/ubuntu/ $(lsb_release -cs) main universe multiverse restricted
deb http://ubuntu.mirror.cambrium.nl/ubuntu/ $(lsb_release -cs)-backports main universe multiverse restricted
deb http://ubuntu.mirror.cambrium.nl/ubuntu/ $(lsb_release -cs)-proposed main universe multiverse restricted
deb http://ubuntu.mirror.cambrium.nl/ubuntu/ $(lsb_release -cs)-security main universe multiverse restricted
deb http://ubuntu.mirror.cambrium.nl/ubuntu/ $(lsb_release -cs)-updates main universe multiverse restricted
EOF
fi
#Ubuntu games (tem o Kega-Fusion) - (Repositório fora do ar)
#sudo rm -rf /etc/apt/sources.list.d/ubuntugames.list
#sudo echo 'deb http://archive.ubuntugames.org ubuntugames main' >> /etc/apt/sources.list.d/ubuntugames.list ;
#sudo echo 'deb-src http://archive.ubuntugames.org ubuntugames main' >> /etc/apt/sources.list.d/ubuntugames.list ;
#wget -q -O - http://archive.ubuntugames.org/ubuntugames.key | sudo apt-key add -

## Repositorio de games Playdeb
#	http://www.playdeb.net
sudo mkdir -p /var/cache/apt/archives
cd /var/cache/apt/archives
sudo wget -c http://archive.getdeb.net/install_deb/playdeb_0.3-1~getdeb1_all.deb -P /var/cache/apt/archives
sudo dpkg -i playdeb_0.3-1~getdeb1_all.deb
cd -

#Wine
sudo add-apt-repository -y ppa:ubuntu-wine/ppa
#Oracle Java Development Kit
sudo add-apt-repository -y ppa:webupd8team/java
#medibuntu (videolan)
	if (ls /etc/apt/sources.list.d |grep -i "medibuntu.list")
		then
			sudo rm -rf /etc/apt/sources.list.d/medibuntu.list
			echo 'Removido repositorio medibuntu...'
			echo 'Adicionando repositorio videolan...'
		else
			echo 'Adicionando repositorio videolan...'
	fi
sudo touch /etc/apt/sources.list.d/libdvdcss.list
sudo rm -rf /etc/apt/sources.list.d/libdvdcss.list
sudo touch /etc/apt/sources.list.d/libdvdcss.list
sudo sh -c "echo 'deb http://download.videolan.org/pub/debian/stable/ /' >> /etc/apt/sources.list.d/libdvdcss.list"
sudo sh -c "echo 'deb-src http://download.videolan.org/pub/debian/stable/ /' >> /etc/apt/sources.list.d/libdvdcss.list"
wget -O - http://download.videolan.org/pub/debian/videolan-apt.asc | sudo apt-key add -
#
##	Repositorio PlayOnLinux
if (lsb_release -cs | grep -i precise)
	then
sudo rm -rf /etc/apt/sources.list.d/playonlinux.list >> /dev/null
wget -q "http://deb.playonlinux.com/public.gpg" -O- | sudo apt-key add -
sudo wget http://deb.playonlinux.com/playonlinux_$(lsb_release -cs).list -O /etc/apt/sources.list.d/playonlinux.list
else
if (lsb_release -cs | grep -i raring)
	then
sudo rm -rf /etc/apt/sources.list.d/playonlinux.list >> /dev/null
wget -q "http://deb.playonlinux.com/public.gpg" -O- | sudo apt-key add -
sudo wget http://deb.playonlinux.com/playonlinux_$(lsb_release -cs).list -O /etc/apt/sources.list.d/playonlinux.list
else
if (lsb_release -cs | grep -i saucy)
	then
sudo rm -rf /etc/apt/sources.list.d/playonlinux.list >> /dev/null
wget -q "http://deb.playonlinux.com/public.gpg" -O- | sudo apt-key add -
sudo wget http://deb.playonlinux.com/playonlinux_$(lsb_release -cs).list -O /etc/apt/sources.list.d/playonlinux.list
else
if (lsb_release -cs | grep -i trusty)
	then
sudo rm -rf /etc/apt/sources.list.d/playonlinux.list >> /dev/null
wget -q "http://deb.playonlinux.com/public.gpg" -O- | sudo apt-key add -
sudo wget http://deb.playonlinux.com/playonlinux_$(lsb_release -cs).list -O /etc/apt/sources.list.d/playonlinux.list
else
if (ls /etc/apt/sources.list.d | grep -i playonlinux.list)
			then
	echo -e "\n\nRepositorio PlayonLinux Ok!"
		else
	echo -e "\n\nRepositorio PlayonLinux nao foi criado!"
fi
fi
fi
fi
fi
##	Fim Repositorio PlayOnLinux

## Repositorio Gnomebaker
sudo add-apt-repository -y ppa:gnomebaker/stable
sudo sed -i "s/$(lsb_release -cs)/precise/g" /etc/apt/sources.list.d/gnomebaker-stable-$(lsb_release -cs).list
## Fim Repositorio GnomeBaker
clear
	echo -e '\n Atualizando os repositorios...'
	echo -e '\b Aguarde 30 Segundos ou aperte "Enter".'
read -t 30
#Prevenir erro "BADSIG ID"
#Inicio
sudo -i apt-get -y clean
sudo -i apt-get -y autoclean
cd /var/lib/apt

#list.old	
if (ls /var/lib/apt | grep -i lists.old)
			then
		sudo -i rm -rf /var/lib/apt/lists.old
#list1
	if (ls /var/lib/apt | grep -i lists)
			then
		sudo -i mv /var/lib/apt/lists /var/lib/apt/lists.old
		sudo -i mkdir -p  /var/lib/apt/lists/partial
			else
		sudo -i mkdir -p  /var/lib/apt/lists/partial
	fi
#list1fim
			else
#list2
	if (ls /var/lib/apt | grep -i lists)
			then
		sudo -i mv /var/lib/apt/lists /var/lib/apt/lists.old
		sudo -i mkdir -p  /var/lib/apt/lists/partial
			else
		sudo -i mkdir -p  /var/lib/apt/lists/partial
	fi
#listfim2
fi
#list.oldfim

cd -

sudo -i apt-get -y clean
sudo -i apt-get -y autoclean
sudo -i apt-get -y update
#Fim
#Fim "BADSIG ID"
clear
	echo -e '\n Verificando e fazendo upgrade do sistema...'
	echo -e '\b Aguarde 30 Segundos ou aperte "Enter".'
read -t 30
sudo apt-get -y dist-upgrade
read -t 10
clear
	echo -e '\n Configuracao dos repositorios terminada.'
	echo -e '\b Indo para a proxima etapa'
	echo -e '\b Aguarde 30 Segundos ou aperte "Enter".'
read -t 30
	ConfInstall
}
###Fim Adicionar

###Inicio Upgrade
Upgrade (){
	clear
	echo -e '\n Apenas fazer um upgrade...'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
#Prevenir erro "BADSIG ID"
#Inicio
sudo -i apt-get -y clean
sudo -i apt-get -y autoclean
cd /var/lib/apt

#list.old	
if (ls /var/lib/apt | grep -i lists.old)
			then
		sudo -i rm -rf /var/lib/apt/lists.old
#list1
	if (ls /var/lib/apt | grep -i lists)
			then
		sudo -i mv /var/lib/apt/lists /var/lib/apt/lists.old
		sudo -i mkdir -p  /var/lib/apt/lists/partial
		sudo -i apt-get -y clean
		sudo -i apt-get -y autoclean
		sudo -i apt-get -f -y autoremove
		sudo -i apt-get -y update
		sudo -i apt-get -f -y dist-upgrade
			else
		sudo -i mkdir -p  /var/lib/apt/lists/partial
		sudo -i apt-get -y clean
		sudo -i apt-get -y autoclean
		sudo -i apt-get -f -y autoremove
		sudo -i apt-get -y update
		sudo -i apt-get -f -y dist-upgrade
	fi
#list1fim
			else
#list2
	if (ls /var/lib/apt | grep -i lists)
			then
		sudo -i mv /var/lib/apt/lists /var/lib/apt/lists.old
		sudo -i mkdir -p  /var/lib/apt/lists/partial
		sudo -i apt-get -y clean
		sudo -i apt-get -y autoclean
		sudo -i apt-get -f -y autoremove
		sudo -i apt-get -y update
		sudo -i apt-get -f -y dist-upgrade
			else
		sudo -i mkdir -p  /var/lib/apt/lists/partial
		sudo -i apt-get -y clean
		sudo -i apt-get -y autoclean
		sudo -i apt-get -f -y autoremove
		sudo -i apt-get -y update
		sudo -i apt-get -f -y dist-upgrade
	fi
#listfim2
fi
#list.oldfim

cd -

#sudo -i apt-get -y clean
#sudo -i apt-get -y autoclean
#sudo -i apt-get -y update
#Fim
#Fim "BADSIG ID"
#	sudo apt-get -y dist-upgrade
	clear
	echo -e '\n Upgrade terminado.'
	echo -e '\b Indo para a proxima etapa'
	echo -e '\b Aguarde 30 Segundos ou aperte "Enter".'
read -t 30
	ConfInstall
}
###Fim Upgrade

###Inicio Compilacao
Compilacao (){
	clear
	echo -e '\n Pular etapa para Compilacao/Manutencao...'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	ConfInstall
}
#Sair (){
#	clear
#	echo -e '\n Saindo da configuracao...'
#	echo -e '\b Espere 30 segundos ou aperte "Enter".'
#	read -t 30
#	exit 0
#}
addgpg

###Inicio ConfInstall
ConfInstall() {
	clear
	echo -e '\n Iniciando etapa compiladores e manutencao...\n'
	echo -e '\b Nesta etapa irei perguntar se deseja instalar o aplicativo ou nao.'
	echo -e '\b E irei configurar automaticamente de acordo com suas escolhas.\n\n'
	echo -e '\b Deseja continuar ou Sair?'
	echo -e '\b Digite (C) para continuar.'
	echo -e '\b Digite (Q) para sair.'
read opcao
case $opcao in
	C) Continuar ;;
	Q) Sair ;;
	*) "Opcao invalida" ; echo  ; ConfInstall ;;
esac
}
Sair (){
	clear
	echo -e '\n Saindo da configuracao...'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	exit 0
}
###Inicio Continuar ConfInstall
Continuar() {
	clear
	echo -e '\n Continuando com a configuracao...'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
###unity-lens-shopping 1
if (dpkg -l |grep 'ii  unity-lens-shopping')
	then
clear
unitylensshopping() {
	clear
	echo -e '\n Remover o aplicativo Amazon.'
	echo -e '\b Amazon. Atualmente e completamente inutil ja que nao usamos aqui no Brasil.'
	echo -e '\b Alem do que, isto aumenta a seguranca e privacidade do sistema\n\n'
	echo -e '\b Deseja continuar ou pular?'
	echo -e '\b Digite (C) para continuar.'
	echo -e '\b Digite (P) para pular.'
read opcao
case $opcao in
	C) Continuar ;;
	P) Pular ;;
	*) "Opcao invalida" ; echo  ; unitylensshopping ;;
esac
}
Continuar() {
	clear
	echo -e '\n Removendo Amazon...'
	read -t 5
	sudo apt-get -y remove unity-lens-shopping
	read -t 2
	clear
	compilacoes1
}
Pular() {
	clear
	echo -e '\n Pulando para o proximo aplicativo...'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	compilacoes1
}
unitylensshopping
###unity-lens-shopping 1 Fim
	else
		clear
fi
###Fim Continuar ConfInstall
}
ConfInstall
###Fim ConfInstall

###Inicio Compilacoes 1
compilacoes1() {
	clear
	echo -e '\n Instalar pacotes necessarios para compilacoes...\n'
	echo -e '\b subversion'
	echo -e '\b aptitude' 
	echo -e '\b tasksel'
	echo -e '\b debtags'
	echo -e '\b auto-apt'
	echo -e '\b build-essential' 
	echo -e '\b kernel-package' 
	echo -e '\b checkinstall' 
	echo -e '\b deborphan\n\n'
	echo -e 'Deseja continuar ou pular?'
	echo -e 'Digite (C) para continuar.'
	echo -e 'Digite (P) para pular.'
read opcao
case $opcao in
	C) Continuar ;;
	P) Pular ;;
	*) "Opcao invalida" ; echo  ; compilacoes1 ;;
esac
}
Continuar() {
	clear
	echo -e '\n Instalando pacotes...'
	read -t 5
sudo apt-get -y install subversion aptitude tasksel debtags libcwidget-dev tagcoll auto-apt build-essential kernel-package libncurses5-dev checkinstall deborphan
sudo sed -i "s/print-installation-architecture/print-architecture/g" /usr/bin/auto-apt
sudo sh -c 'cat > /usr/bin/auto-apt-update' <<EOF
#!/bin/sh
auto-apt update-local
auto-apt update
auto-apt updatedb
EOF
sudo chmod +x /usr/bin/auto-apt-update
	clear
echo -e '\n Instalacao concluida...\n'
	read -t 5
echo -e '\b Para atualizar o banco de dados do auto-apt com facilidade, faca o comando auto-apt-update.'
echo -e '\b Sempre que for compilar qualquer programa, atualizar o banco de dados, consulte o man para usar'
echo -e '\b Ao compilar qualquer pacote, ha a opcao de empacotar com o checkinstall, saiba mais com o man\n\n'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	clear
}
Pular() {
	clear
	echo -e '\n Pulando para o proximo aplicativo...'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	compilacoes2
}
compilacoes1
###Fim Compilacoes 1

### Inicio Compilacoes 2
compilacoes2() {
	clear
	echo -e '\n Instalando programa grafico para configuracao do servidor samba...\n'
	echo -e '\b Gadmin-Samba. Programa grafico'
	echo -e '\b Samba. Programa modo x \n\n'
	echo -e '\b Deseja continuar ou pular?'
	echo -e '\b Digite (C) para continuar.'
	echo -e '\b Digite (P) para pular.'
read opcao
case $opcao in
	C) Continuar ;;
	P) Pular ;;
	*) "Opcao invalida" ; echo  ; compilacoes2 ;;
esac
}
Continuar() {
	clear
	echo -e '\n Instalando pacotes...'
	read -t 5
sudo cp -rf /etc/samba/smb.conf /etc/samba/smb.conf.old
sudo apt-get -y install gadmin-samba libpam-smbpass
sudo chmod -R 755 /dev/shm
clear
echo -e '\n Instalacao concluida, para configurar o servidor samba use o programa gadmin-samba'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	clear
}
Pular() {
	clear
	echo -e '\n Pulando para o proximo aplicativo...'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	compilacoes3
}
compilacoes2
###Fim Compilacoes 2

###Inicio Compilacoes 3
compilacoes3() {
	clear
	echo -e '\n Instalando pacotes em linha de comando para verificacao de IPs...\n'
	echo -e '\b Curl. Verifica qual e o seu IP Externo com o comando "curl ifconfig-me".'
	echo -e '\b Nmap. verifica IPs conectados na rede(Consulte o man).\n\n'
	echo -e '\b Deseja continuar ou pular?'
	echo -e '\b Digite (C) para continuar.'
	echo -e '\b Digite (P) para pular.'
read opcao
case $opcao in
	C) Continuar ;;
	P) Pular ;;
	*) "Opcao invalida" ; echo  ; compilacoes3 ;;
esac
}
Continuar() {
	clear
	echo -e '\n Instalando pacotes...'
	read -t 5
sudo apt-get -y install curl nmap
	clear
echo -e '\n Instalacao concluida'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	clear
}
Pular() {
	clear
	echo -e '\n Pulando para o proximo aplicativo...'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	compilacoes4
}
compilacoes3
###Fim Compilacoes 3

###Inicio Compilacoes 4
compilacoes4() {
	clear
	echo -e '\n Instalando pacote para otimizar a memoria...\n'
	echo -e '\b zram-config.\n\n'
	echo -e '\b Deseja continuar ou pular?'
	echo -e '\b Digite (C) para continuar.'
	echo -e '\b Digite (P) para pular.'
read opcao
case $opcao in
	C) Continuar ;;
	P) Pular ;;
	*) "Opcao invalida" ; echo  ; compilacoes4 ;;
esac
}
Continuar() {
	clear
	echo -e '\n Instalando pacote...'
	read -t 5
sudo apt-get -y install zram-config
	clear
echo -e '\n Instalacao concluida'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	clear
}
Pular() {
	clear
	echo -e '\n Pulando para o proximo aplicativo...'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	compilacoes5
}
compilacoes4
###Fim Compilacoes 4

###Inicio Compilacoes 5
compilacoes5() {
	clear
	echo -e '\n Instalando prelink...\n'
	echo -e '\b Prelink. constroi pontes de acesso rapido entre os programas e as bibliotecas melhorando a performance do sistema.\n\n'
	echo -e '\b Deseja continuar ou pular?'
	echo -e '\b Digite (C) para continuar.'
	echo -e '\b Digite (P) para pular.'
read opcao
case $opcao in
	C) Continuar ;;
	P) Pular ;;
	*) "Opcao invalida" ; echo  ; compilacoes5 ;;
esac
}
Continuar() {
	clear
	echo -e '\n Instalando pacote...'
	read -t 5
sudo apt-get -y install prelink
sudo sed -i "s/PRELINKING=unknown/PRELINKING=yes/g" /etc/default/prelink
sudo sh -c 'cat > /etc/apt/apt.conf' <<EOF
#"DPkg::Post-Invoke {"echo Running prelink, please wait...;/etc/cron.daily/prelink";}"
DPkg::Post-Invoke {"echo Carregando prelink, por favor espere...;/etc/cron.daily/prelink";}
EOF
read -t 5
clear
echo -e '\n Prelink instalado\n'
read -t 5
echo -e '\b Executando processo do comando prelink para a primeira avaliacao do seu sistema...'
echo -e '\b Apos a primeira avaliacao, as proximas avaliacoes automaticas sao rapidas'
echo -e '\b Se algum pacote que for instalado posteriormente der erro de nucleo'
echo -e '\b Adicione o endereco do comando do pacote com a opcao -b na frente no arquivo /etc/prelink.conf'
echo -e '\b Em seguida reinstale o pacote e veja se funciona\n\n'
read -t 5
echo -e '\b Carregando prelink, por favor espere...\n'
/etc/cron.daily/prelink
	clear
echo -e '\n Instalacao concluida'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	clear
}
Pular() {
	clear
	echo -e '\n Pulando para o proximo aplicativo...'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	compilacoes6
}
compilacoes5
###Fim Compilacoes 5

###Inicio Compilacoes 6
compilacoes6() {
	clear
	echo -e '\n Instalacao do Mesa-utils...\n'
	echo -e '\b Mesa-utils. Utilitário Mesa GL diversos'
	echo -e '\b Este pacote contem varios utilitarios GL basicos construidos pela Mesa. \n Incluindo glxinfo e glxgears.'
	echo -e '\b E atraves dele que a opcao Detalhes nas informacoes do sistema aparece \n sobre a informacao de video\n\n'
	echo -e '\b Deseja continuar ou pular?'
	echo -e '\b Digite (C) para continuar.'
	echo -e '\b Digite (P) para pular.'
read opcao
case $opcao in
	C) Continuar ;;
	P) Pular ;;
	*) "Opcao invalida" ; echo  ; compilacoes6 ;;
esac
}
Continuar() {
	clear
	echo -e '\n Instalando pacote...'
	read -t 5
sudo apt-get -y install mesa-utils
	clear
	echo -e '\n Instalacao concluida.'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	clear
}
Pular() {
	clear
	echo -e '\n Pulando para o proximo aplicativo...'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	compilacoes7
}
compilacoes6
###Fim Compilacoes 6

##inicio Compilacoes 7
compilacoes7() {
	clear
	echo -e '\n Instalacao de gerador de boot...\n '
	echo -e '\b Unetbootin. Configurador Linux/BSD para Particoes ou USB drive.'
	echo -e '\b Multisystem. Criador de Live USB Multiplos.'
	echo -e '\b Para fazer qualquer boot de outras distros e ate o proprio Ubuntu usb, \n use Unetbooting clicando no menu sistema'
	echo -e '\b Para fazer boot multiplo de varias distros em usb, use Multisystem \n clicando no menu sistema.\n\n'
	echo -e '\b Deseja continuar ou pular?'
	echo -e '\b Digite (C) para continuar.'
	echo -e '\b Digite (M) para terminar esta etapa e ir para Multimedia/Codecs.'
read opcao
case $opcao in
	C) Continuar ;;
	M) Pular ;;
	*) "Opcao invalida" ; echo  ; compilacoes7 ;;
esac
}
Continuar() {
	clear
	echo -e '\n Instalando pacote...\n'
	read -t 5
sudo apt-get -y install unetbootin multisystem
	clear
	echo -e '\n Instalacao e configuracao da etapa "Compilacao e Manutencao"  concluida.'
	echo -e '\b Avancando para a etapa Multimedia/Codecs'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	clear
	MultimediaCodecs
}
Pular() {
	clear
	echo -e '\n Pulando para o proximo aplicativo...'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	clear
	MultimediaCodecs
}
compilacoes7
###Fim Compilacoes 7
#}
#Sair() {
#	clear
#	echo -e '\n Saindo da configuracao...'
#	echo -e '\b Espere 30 segundos ou aperte "Enter".'
#	read -t 30
#	exit 0
#}
#ConfInstall
###Fim Confinstall

MultimediaCodecs() {
	clear
	echo -e '\n Iniciando etapa Multimedia e Codecs...\n '
	echo -e '\b Nesta etapa irei perguntar se deseja instalar o aplicativo multimedia ou nao.'
	echo -e '\b E irei configurar automaticamente de acordo com suas escolhas.\n\n'
	echo -e '\b Deseja continuar ou Sair?'
	echo -e '\b Digite (C) para continuar.'
	echo -e '\b Digite (Q) para sair.'
read opcao
case $opcao in
	C) Continuar ;;
	Q) Sair ;;
	*) "Opcao invalida" ; echo  ; MultimediaCodecs ;;
esac
}

Continuar() {
	clear
	echo -e '\n Continuando com a configuracao...'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	clear
	MultimediaCodecs1
}

Sair() {
	clear
	echo -e '\n Saindo da configuracao...'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	exit 0
}
MultimediaCodecs

MultimediaCodecs1() {
	clear
	echo -e '\n Instalacao de codecs.\n'
	echo -e '\b Sera instalado pacotes de Codecs necessários para varios \n tipos de videos e sons'
	echo -e '\b E suporte a alguns decodificadores de audio/video\n\n'
	echo -e '\b Deseja continuar ou pular?'
	echo -e '\b Digite (C) para continuar.'
	echo -e '\b Digite (P) para pular.'
read opcao
case $opcao in
	C) Continuar ;;
	P) Pular ;;
	*) "Opcao invalida" ; echo  ; MultimediaCodecs1 ;;
esac
}
Continuar() {
	clear
	echo -e '\nInstalando pacote...'
	read -t 5
if (lsb_release -cs | grep -i precise)
	then
sudo apt-get -y install gstreamer0.10-ffmpeg gstreamer0.10-plugins-ugly flashplugin-installer faad ffmpeg ffmpeg2theora mencoder libdvdcss2 freepats libmjpegtools-dev libass4 libcdaudio1 libdirac-encoder0 libflite1 libgme0 libgstreamer-plugins-bad0.10-0 libmimic0 libmms0 libmodplug1 libmpcdec6 libofa0 libslv2-9 libsoundtouch0 libspandsp2 libvo-aacenc0 libvo-amrwbenc0 libwildmidi-config libwildmidi1 libzbar0 libzvbi-common libzvbi0 gstreamer0.10-plugins-bad-multiverse gstreamer0.10-plugins-bad
cd /var/cache/apt/archives/
wget -c http://ubuntu.mirror.cambrium.nl/ubuntu//pool/universe/o/opus/libopus0_1.0.1-0ubuntu1_$(dpkg --print-architecture).deb
sudo dpkg -i libopus0*.deb
cd -
sudo ldconfig -l ; sudo depmod -a
read -t 3
	else
if (lsb_release -cs | grep -i trusty)
	then
sudo apt-get -y install $(lsb_release -is)-restricted-extras gstreamer0.10-ffmpeg gstreamer0.10-plugins-ugly flashplugin-installer faad ffmpeg ffmpeg2theora mencoder libdvdcss2 libdvdread4 libdvdnav4 freepats  libass4 libcdaudio1 libdirac-encoder0 libflite1 libgme0 libgstreamer-plugins-bad0.10-0 libmimic0 libmms0 libmodplug1 libmpcdec6 libofa0 libslv2-9 libsoundtouch0 libspandsp2 libvo-aacenc0 libvo-amrwbenc0 libwildmidi-config libwildmidi1 libzbar0 libzvbi-common libzvbi0 gstreamer0.10-plugins-bad-multiverse gstreamer0.10-plugins-bad libopus0
sudo chmod +x /usr/share/doc/libdvdread4/install-css.sh
sudo sh /usr/share/doc/libdvdread4/install-css.sh
read -t 3
else
sudo apt-get -y install $(lsb_release -is)-restricted-extras
read -t 3
# libdvdcss2: to recognize DVD, libdvdread4: to read DVD, libdvdnav4: to navigate DVD
fi
fi
	clear
	echo -e '\n Instalacao concluida.'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	clear
}
Pular() {
	clear
	echo -e '\n Pulando para o proximo aplicativo...'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	MultimediaCodecs2
}
MultimediaCodecs1

MultimediaCodecs2() {
	clear
	echo -e '\n Instalando pacotes para suporte a media para o Ubuntu e brasero.\n'
	echo -e '\b cdtool. Tocador de CD de audio e controlador de CD-ROM baseados em texto.'
	echo -e '\b dvd+rw-tools. Suite de ferramentas que torna possivel gravar imagens de DVD.'
	echo -e '\b cdrdao.Suporte gravacao de CDs em modo "Disk-At-Once" (DAO).'
	echo -e '\b normalize-audio. Ferramenta para ajustar o audio WAV, MP3 e OGG \n para um nivel de volume padrao.'
	echo -e '\b vcdimager. Ferramentas para masterizar (S)VCD e ripping VCD.'
	echo -e '\b dvdauthor. Gerador de DVD de filme a partir de um fluxo mpeg2 valido.'
	echo -e '\b gnomebaker. Criador/Gravador de CD/DVD e ISO'
	echo -e '\b sound-juicer. Extractor (ripper) de CDs com interface simples e facil de usar.\n\n'
	echo -e '\b Deseja continuar ou pular?'
	echo -e '\b Digite (C) para continuar.'
	echo -e '\b Digite (P) para pular.'
read opcao
case $opcao in
	C) Continuar ;;
	P) Pular ;;
	*) "Opcao invalida" ; echo  ; MultimediaCodecs2 ;;
esac
}
Continuar() {
	clear
	echo -e '\n Instalando pacote...'
	read -t 5
sudo apt-get -y install cdtool dvd+rw-tools cdrdao normalize-audio vcdimager dvdauthor sound-juicer gnomebaker
	clear
	echo -e '\n Instalacao concluida.'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	clear
}
Pular() {
	clear
	echo -e '\n Pulando para o proximo aplicativo...'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	MultimediaCodecs3
}
MultimediaCodecs2

MultimediaCodecs3() {
	clear
	echo -e '\n Instalando pacotes para ISO.\n '
	echo -e '\b isomaster. Editor grafico de imagem de CD.'
	echo -e '\b furiusisomount. Aplicativo para montar arquivos de imagem ISO, IMG, BIN, MDF e NG.\n\n'
	echo -e '\b Deseja continuar ou pular?'
	echo -e '\b Digite (C) para continuar.'
	echo -e '\b Digite (P) para pular.'
read opcao
case $opcao in
	C) Continuar ;;
	P) Pular ;;
	*) "Opcao invalida" ; echo  ; MultimediaCodecs3 ;;
esac
}
Continuar() {
	clear
	echo -e '\n Instalando pacote...'
	read -t 5
sudo apt-get -y install isomaster furiusisomount
	clear
	echo -e '\n Instalacao concluida.'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	clear
}
Pular() {
	clear
	echo -e '\n Pulando para o proximo aplicativo...'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	MultimediaCodecs4
}
MultimediaCodecs3

MultimediaCodecs4() {
	clear
	echo -e '\n Instalando pacotes para DVD/VCD/VIDEOS e Som.\n'
	echo -e '\b soundconverter. Conversor grafico de som'
	echo -e '\b ogmrip. Utilitario extractor (ripper) de DVD.'
	echo -e '\b avidemux. Editor de vídeo versao GTK'
	echo -e '\b mediainfo. Utilitario em linha de comando para obter informacoes de \n arquivos de audio/video'
	echo -e '\b mediainfo-gui. Utilitario grafico para obter informacoes de arquivos \n de audio/video'
	echo -e '\b vlc. Leitor multimédia e streamer para varias fontes de rede'
	echo -e '\b fluidsynth. (Qsynth), um sintetizador midi em tempo real com base em \n SoundFont2\n\n'
	echo -e '\b Deseja continuar ou pular?'
	echo -e '\b Digite (C) para continuar.'
	echo -e '\b Digite (P) para pular.'
read opcao
case $opcao in
	C) Continuar ;;
	P) Pular ;;
	*) "Opcao invalida" ; echo  ; MultimediaCodecs4 ;;
esac
}
Continuar() {
	clear
	echo -e '\n Instalando pacote...'
	read -t 5
sudo apt-get -y install soundconverter ogmrip avidemux mediainfo mediainfo-gui vlc vlc-data vlc-dbg vlc-plugin-fluidsynth vlc-plugin-jack vlc-plugin-notify vlc-plugin-pulse vlc-plugin-sdl vlc-plugin-svg vlc-plugin-zvbi
read -t 2
sudo sed -i "s/totem/vlc/g" /etc/gnome/defaults.list
	clear
	echo -e '\n Instalacao concluida.'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	clear
}
Pular() {
	clear
	echo -e '\n Pulando para o proximo aplicativo...'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	MultimediaCodecs5
}
MultimediaCodecs4

MultimediaCodecs5() {
	clear
	echo -e '\n Instalando pacotes para suporte a compactadores-descompactadores.\n'
	echo -e '\b arj. Versao de codigo fonte aberto do arquivador arj.'
	echo -e '\b lha. Um arquivador lzh especialmente para conversoes fido <-> Rfc.'
	echo -e '\b p7zip. Compactador de arquivos 7z com alta taxa de compressao.'
	echo -e '\b p7zip-full. Compactador de arquivos 7z/7za com alta taxa de compressao \n e suporte a varios formatos de arquivos.'
	echo -e '\b p7zip-rar. Modulo rar non-free para p7zip.'
	echo -e '\b rar. Compactador de arquivos rar.'
	echo -e '\b unrar. Descompactador de arquivos rar.'
	echo -e '\b unace-nonfree. Pacote para extrair, testar e ver arquivos .ace (V. non-free).\n\n'
	echo -e '\b Deseja continuar ou pular?'
	echo -e '\b Digite (C) para continuar.'
	echo -e '\b Digite (P) para pular.'
read opcao
case $opcao in
	C) Continuar ;;
	P) Pular ;;
	*) "Opcao invalida" ; echo  ; MultimediaCodecs5 ;;
esac
}
Continuar() {
	clear
	echo -e '\n Instalando pacote...'
	read -t 5
if (lsb_release -cs | grep -i trusty)
		then
sudo apt-get -y -f install lhasa arj p7zip p7zip-full p7zip-rar unrar unrar-free rar unace
	else
if (lsb_release -cs | grep -i precise)
		then
sudo apt-get -y install arj lha p7zip p7zip-full p7zip-rar rar unrar unace-nonfree
	else
sudo apt-get -y -f install lhasa arj p7zip p7zip-full p7zip-rar unrar unrar-free rar unace
sudo apt-get -y -f install arj lha p7zip p7zip-full p7zip-rar rar unrar unace-nonfree
fi
fi
	clear
	echo -e '\n Instalacao concluida.'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	clear
	MultimediaCodecs6
}
Pular() {
	clear
	echo -e '\n Pulando para o proximo aplicativo...'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	MultimediaCodecs6
}
MultimediaCodecs5

MultimediaCodecs6() {
	clear
	echo -e '\n Instalando pacote chromium-browser + pepperflashplugin-nonfree.\n'
	echo -e '\n Chromium é um projeto de navegador de código fonte aberto \n Serve como base para o Google Chrome, que é o Chromium com uma marca \n diferente (nome e logo) com poucas adições tais como uso de rastreamento \n e um sistema de autoatualização. \n Por ser um pacote livre, trabalha melhor com aplicativos abertos como \n "Open Java" e melhor compatibilidade com "Oracle Java".\n\n'
	echo -e '\n pepperflashplugin-nonfree é um Flash Plugin compatível com o Google Chrome/Chromium'
	echo -e '\b Deseja continuar e instalar o Chromium, ir para o Chrome ou pular?'
	echo -e '\b Digite (C) para continuar e instalar o Chromium.'
	echo -e '\b Digite (G) para ir ao Google Chrome.'
	echo -e '\b Digite (P) para pular.'
read opcao
case $opcao in
	C) chromiumbrowser ;;
	G) GoogleChrome ;;
	P) Pular ;;
	*) "Opcao invalida" ; echo  ; MultimediaCodecs6 ;;
esac
}
chromiumbrowser() {
	clear
	echo -e '\n Instalando pacote...'
	read -t 5
sudo apt-get -y install chromium-browser
sudo apt-get -y install pepperflashplugin-nonfree
	clear
	echo -e '\nInstalacao concluida.'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	clear
	MultimediaCodecs7
}
GoogleChrome() {
	clear
	echo -e '\n Instalando pacote Google Chrome + pepperflashplugin-nonfree.\n'
	echo -e '\n O Chrome e o um navegador desenvolvido pelo Google. \n Compilado com base em componentes de codigo aberto como o motor \n de renderizacao, o WebKit da Apple Inc. e sua estrutura de desenvolvimento \n de aplicacoes (Framework).\n\n'
	echo -e '\n pepperflashplugin-nonfree é um Flash Plugin compatível com o Google Chrome/Chromium'
	echo -e '\b Deseja continuar e instalar o Google Chrome, ou pular?'
	echo -e '\b Digite (C) para continuar e instalar o Google Chrome.'
	echo -e '\b Digite (P) para pular.'
read opcao
case $opcao in
	C) Continuar ;;
	P) Pular ;;
	*) "Opcao invalida" ; echo  ; GoogleChrome ;;
esac
}
Continuar() {
	clear
	echo -e '\n Instalando pacote...'
	read -t 5
sudo apt-get -y install libxss1 libudev0 google-chrome-stable
sudo apt-get -y install pepperflashplugin-nonfree
	echo -e '\n Instalacao concluida.'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	clear
	MultimediaCodecs7
}
Pular() {
	clear
	echo -e '\n Pulando para o proximo aplicativo...'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	MultimediaCodecs7
}
Pular() {
	clear
	echo -e '\n Pulando para o proximo aplicativo...'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	MultimediaCodecs7
}
MultimediaCodecs6

MultimediaCodecs7() {
	clear
	echo -e '\n Instalando pacote Open Java Development Kit.'
	echo -e '\n OpenJDK e um ambiente de desenvolvimento para construir aplicacoes, applets, \n e componentes usando a linguagem de programacao Java. \n Os pacotes são construidos usando o suporte e patches do projeto IcedTea. \n IcedTea e um plugin para navegador web para executar applets Java, com suporte \n a LiveConnect/JavaScript. \n Destina-se para xulrunner-1.9 e navegadores compatíveis que suportem o NPAPI. \n Para quem usa o Java em casos especiais, por exemplo, acessar o site \n Banco do Brasil, e recomendavel instalar o Oracle Java. \n Teste o Java no site oficial: http://www.java.com/pt_BR/download/testjava.jsp\n\n'
	echo -e '\b Deseja continuar e instalar o Open Java, ir para Oracle Java ou pular para \n proxima etapa?\n'
	echo -e '\b Digite (C) para continuar e instalar o Open Java.'
	echo -e '\b Digite (O) para ir ao Oracle Java.'
	echo -e '\b Digite (P) para pular.'

read opcao
case $opcao in
	C) OpenJavaDevelopmentKit ;;
	O) OracleJava ;;
	P) Pular ;;
	*) "Opcao invalida" ; echo  ; MultimediaCodecs7 ;;
esac
}
OpenJavaDevelopmentKit() {
	clear
	echo -e '\n Instalando pacote...'
	read -t 5
sudo apt-get -y install aria2 openjdk-7-jdk icedtea-7-plugin icedtea-plugin default-jre-headless default-jre
if (update-java-alternatives -l |cut -d "/" -f "5" |grep 1.7 |grep openjdk)
	then
cd /usr/lib/jvm/
sudo rm -rf /usr/lib/jvm/default-java
sudo ln -sf "$(update-java-alternatives -l |cut -d "/" -f "5" |grep 1.7)" '/usr/lib/jvm/default-java'
cd -
update-java-alternatives -s $(update-java-alternatives -l |cut -d "/" -f "5" |grep 1.7)
	else
		clear
		echo -e '\n Open Java Development Kit 1.7 nao esta instalado'
fi
	clear
	echo -e '\n Instalacao concluida.'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	clear
	Opcional1
}
OracleJava() {
	clear
	echo -e '\n Instalando pacote Oracle Java(TM) Development Kit (JDK) 7. \n\n Oracke JDK (TM) e um ambiente de desenvolvimento para a construcao e \n execucao de aplicacoes, applets, e componentes usando a linguagem de \n programação Java. Inclui o Java Runtime Environment (JRE) para executar \n aplicacoes, Java Plug-in para a execucao de applets em navegadores \n web e ferramentas uteis para o desenvolvimento e teste de programas \n escritos na linguagem de programacao Java. Recomendavel para casos \n especiais como usar aplicacoes Java em codigo fechado. \n\n (PS.1).: Qualquer confirmacao grafica tipo X11 que aparecer, confirme. \n\n (PS.2).: Apos a instalacao, aparecera um menu de configuracao. Escolha a \n opcao em que aparece "java-7-oracle". \n Talvez ira ser a opcao nº 3 ou 4. \n Teste o Java no site oficial: http://www.java.com/pt_BR/download/testjava.jsp \n\n'
	echo -e '\b Deseja continuar e instalar o Oracle Java, ou pular para a proxima etapa?'
	echo -e '\b Digite (C) para continuar e instalar o Oracle Java.'
	echo -e '\b Digite (O) para terminar esta etapa e ir para "Aplicativos Opcionais".'
	echo -e '\b Digite (Q) para terminar e sair da configuracao.'
read opcao
case $opcao in
	C) OracleJavaJDK ;;
	O) Pular ;;
	Q) Sair ;;
	*) "Opcao invalida" ; echo  ; OracleJava ;;
esac
}
OracleJavaJDK() {
	clear
	echo -e '\n Instalando pacote...'
	read -t 5

# Instalando o Oracle Java 8 (JDK8 e JRE8)
sudo apt-get -y -f install oracle-java8-installer

### Instalação automatizada (auto aceitar licença)
#sudo sh -c 'echo "oracle-java8-installer" shared/accepted-oracle-license-v1-1 select true' | sudo /usr/bin/debconf-set-selections

# Alternando para o Oracle Java 8
sudo update-java-alternatives -s java-8-oracle

# Definindo as variáveis ​​de ambiente Java
sudo apt-get -y -f install oracle-java8-set-default

	clear
	echo -e '\n Instalacao concluida.'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	clear
	Opcional1
}
Pular() {
	clear
	echo -e '\n Pulando para o proximo aplicativo...'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	Opcional1
}
Pular() {
	clear
	echo -e '\n Pulando para o proximo aplicativo...'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	Opcional1
}
MultimediaCodecs7

Opcional1() {
	clear
	echo -e '\n Iniciando etapa Aplicativos Opcionais...\n'
	echo -e '\b Nesta etapa irei perguntar se deseja instalar o aplicativo opcional ou nao.'
	echo -e '\b E irei configurar automaticamente de acordo com suas escolhas.\n\n'
	echo -e '\b Nesta etapa sao 4 aplicativos, deles, podera escolher:\n\n'
	echo -e '\b Digite (V) para instalacao e configuracao do Virtual Box.'
	echo -e '\b Digite (R) para instalacao e configuracao de Remasterizador.'
	echo -e '\b Digite (C) para desativar Usuario "Convidado", se houver.'
	echo -e '\b Digite (P) para desativar Usuario "Remoto", se houver.'
	echo -e '\b Digite (K) para adicionar Removedor de Kernels antigos.\n\n'
	echo -e '\b Digite (Q) para terminar esta etapa e sair da configuracao.'
read opcao
case $opcao in
	V) VirtualBoxInst ;;
	R) RemasterizadorInst ;;
	C) ConvidadoDes ;;
	P) RemotoDes ;;
	K) KernelsPurge ;;
	Q) Sair ;;
	*) "Opcao invalida" ; echo  ; Opcional1 ;;
esac
}
Sair() {
	clear
	echo -e '\n Saindo da configuracao...'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	exit 0
}
VirtualBoxInst() {
	clear
	echo -e '\n Instalando pacote Virtual Box...\n'
	echo -e '\b VirtualBox é uma solução de virtualização de PC poderoso \n que lhe permite executar uma grande gama de sistemas operacionais \n de PC em seu sistema Linux. Isto inclui o Windows, Linux, FreeBSD, \n DOS, OpenBSD e outros.\n\n'
	echo -e	'\b Digite (C) se deseja Continuar e instalar o Virtual Box.'
	echo -e '\b Digite (O) para Voltar ao menu principal de "Aplicativos Opcionais".'
	echo -e '\b Digite (Q) para terminar e sair da configuracao.'
read opcao
case $opcao in
	C) VirtualBoxInst1 ;;
	O) Opcional1 ;;
	Q) Sair ;;
	*) "Opcao invalida" ; echo  ; VirtualBoxInst ;;
esac
}
VirtualBoxInst1() {
	echo 'Instalando pacote...'
	read -t 5
echo "Preparando para instalar as dependencias do VirtualBox..."
read -t 10
sudo apt-get -y install linux-headers-$(uname -r) libasound2 libpulse0 libsdl-ttf2.0-0 dkms gcc make binutils libgl1-mesa-glx python-central
read -t 10
clear
echo "A instalar o VirtualBox..."
read -t 10
sudo apt-get -y install virtualbox virtualbox-dkms virtualbox-qt virtualbox-source virtualbox-guest-additions-iso
sudo /etc/init.d/virtualbox restart
read -t 5
#sudo wget -c "http://download.virtualbox.org/virtualbox/$(vboxmanage -v | cut -d '_' -f 1)/Oracle_VM_VirtualBox_Extension_Pack-$(vboxmanage -v | cut -d '_' -f 1)-$(vboxmanage -v | cut -d 'r' -f 2).vbox-extpack" -O "/tmp/Oracle_VM_VirtualBox_Extension_Pack-$(vboxmanage -v | cut -d '_' -f 1)-$(vboxmanage -v | cut -d 'r' -f 2).vbox-extpack"
#read -t 10
#clear
#echo "A instalar a extencao do VirtualBox..."
#sudo VBoxManage extpack install "/tmp/Oracle_VM_VirtualBox_Extension_Pack-$(vboxmanage -v | cut -d '_' -f 1)-$(vboxmanage -v | cut -d 'r' -f 2).vbox-extpack" --replace
#read -t 10
#clear
echo "Habilitando suporte ao USB no VirtualBox..."
sudo sed -i 's/SUBSYSTEM=="usb_device",/SUBSYSTEM=="usb_device", GROUP="vboxusers", MODE="0666",/g' /lib/udev/rules.d/40-virtualbox.rules
sudo sed -i 's/ENV{DEVTYPE}=="usb_device",/ENV{DEVTYPE}=="usb_device", GROUP="vboxusers", MODE="0666",/g' /lib/udev/rules.d/40-virtualbox.rules
read -t 10
clear
echo "Adicionando usuario no grupo vboxuser"
read -t 10
if [ ! "$(grep ^vboxusers /etc/group | grep "$SUDO_USER")" ]; then
sudo usermod -a -G vboxusers "$SUDO_USER"
fi
read -t 10
clear
#echo "Adicionando comando para atualizar a extensao com mais facilidade pelo terminal"
#read -t 5
#sudo touch /usr/bin/update-vbox-extension
#sudo rm -rf /usr/bin/update-vbox-extension
#sudo touch /usr/bin/update-vbox-extension
#sudo chmod +x /usr/bin/update-vbox-extension
#sudo cat > /usr/bin/update-vbox-extension <<EOF
#!/bin/bash
#EOF
#sudo echo 'VBoxManage extpack uninstall $(vboxmanage -v | cut -d r -f 2) --force' >> /usr/bin/update-vbox-extension
#sudo echo 'wget -c "http://download.virtualbox.org/virtualbox/$(vboxmanage -v | cut -d '_' -f 1)/Oracle_VM_VirtualBox_Extension_Pack-$(vboxmanage -v | cut -d '_' -f 1)-$(vboxmanage -v | cut -d 'r' -f 2).vbox-extpack" -O "/tmp/Oracle_VM_VirtualBox_Extension_Pack-$(vboxmanage -v | cut -d '_' -f 1)-$(vboxmanage -v | cut -d 'r' -f 2).vbox-extpack"' >> /usr/bin/update-vbox-extension
#sudo echo 'sleep 3' >> /usr/bin/update-vbox-extension
#sudo echo 'sudo VBoxManage extpack install "/tmp/Oracle_VM_VirtualBox_Extension_Pack-$(vboxmanage -v | cut -d '_' -f 1)-$(vboxmanage -v | cut -d 'r' -f 2).vbox-extpack" --replace' >> /usr/bin/update-vbox-extension
#echo "Para fazer o update apos atualizar o VirtualBox via terminal, faca o comando (update-vbox-extension)"
#read -t 10
#clear
echo "Veja se o usuario esta adicionado no grupo vboxuser, se nao tiver, adicione manualmente"
read -t 10
clear
read -p "Aguarde 30 Segs ou aperte ENTER."
	read -t 30
	clear
	VirtualBoxInst2
}
VirtualBoxInst2() {
	clear
	echo -e '\n Instalacao e configuracao do pacote "Virtual Box concluida.\n'
	echo -e '\b Digite (O) para Voltar ao menu principal de "Aplicativos Opcionais".'
	echo -e '\b Digite (Q) para terminar e sair da configuracao.'
read opcao
case $opcao in
	O) Opcional1 ;;
	Q) Sair ;;
	*) "Opcao invalida" ; echo  ; VirtualBoxInst2 ;;
esac
}
Sair() {
	clear
	echo -e '\n Saindo da configuracao...'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	exit 0
}
RemasterizadorInst() {
	clear
	echo -e '\n Instalacao pacotes Remasterizacao...\n'
	echo -e '\b Neste item da etapa, temos 2 opcoes de instalacao, Sao eles:\n\n'
	echo -e '\n Ubuntu Customization Kit (UCK)\n Ferramenta para customizacao oficial do Ubuntu Live CD.\n Incluindo Kubuntu/Xubuntu e Edubuntu. Voce pode adicionar qualquer \n pacote para o sistema Live como, por exemplo, pacotes de idiomas, \n aplicativos, etc.'
	echo -e '\n Remastersys.\n Ubuntu e um sistema de remasterizacao variavel. E este aplicativo cria \n um LiveCD do sistema instalado. Com ele, voce pode fazer um LiveCD de \n distribuicao ou copia de seguranca do seu sistema.'
	echo -e '\n Digite (U) para instalar o pacote UCK.'
	echo -e '\b Digite (R) para instalar o pacote Remastersys'
	echo -e '\b Digite (O) para Voltar ao menu principal de "Aplicativos Opcionais".'
	echo -e '\b Digite (Q) para terminar e sair da configuracao.'
read opcao
case $opcao in
	U) RemasterizadorInst1 ;;
	R) RemasterizadorInst3 ;;
	O) Opcional1 ;;
	Q) Sair ;;
	*) "Opcao invalida" ; echo  ; RemasterizadorInst ;;
esac
}
RemasterizadorInst1() {
	echo 'Instalando pacote...'
	read -t 5
sudo apt-get -y install uck libfribidi0
read -p "Aguarde 30 Segs ou aperte ENTER."
	read -t 30
	clear
	RemasterizadorInst2
}
RemasterizadorInst2() {
	clear
	echo -e '\n Instalacao e configuracao do pacote "UCK" concluida.\n'
	echo -e '\b Digite (O) para Voltar ao menu principal de "Aplicativos Opcionais".'
	echo -e '\b Digite (Q) para terminar e sair da configuracao.'
read opcao
case $opcao in
	O) Opcional1 ;;
	Q) Sair ;;
	*) "Opcao invalida" ; echo  ; RemasterizadorInst2 ;;
esac
}
Sair() {
	clear
	echo -e '\n Saindo da configuracao...'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	exit 0
}
RemasterizadorInst3() {
	echo 'Instalando pacote...'
	read -t 5
sudo apt-get -y install remastersys
read -p "Aguarde 30 Segs ou aperte ENTER."
	read -t 30
	clear
	RemasterizadorInst4
}
RemasterizadorInst4() {
	clear
	echo -e '\n Instalacao e configuracao do pacote "Remastersys" concluida.\n'
	echo -e '\b Digite (O) para Voltar ao menu principal de "Aplicativos Opcionais".'
	echo -e '\b Digite (Q) para terminar e sair da configuracao.'
read opcao
case $opcao in
	O) Opcional1 ;;
	Q) Sair ;;
	*) "Opcao invalida" ; echo  ; RemasterizadorInst4 ;;
esac
}
Sair() {
	clear
	echo -e '\n Saindo da configuracao...'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	exit 0
}
ConvidadoDes() {
	clear
	echo -e '\n Desativar Usuario "Convidado".\n'
	echo -e '\b Por padrao, o Ubuntu e fornecido com a conta de convidado habilitada\n e mostrado na tela de login. A sessao de convidado do Ubuntu e um\n recurso que possibilita de maneira conveniente o emprestimo do seu\n computador a outras pessoas mas nos dando um alto nivel de segurança.\n Com isso as pastas dos usuarios ficam protegidas e sempre que for\n feito um logout as configuracoes e arquivos salvos por este usuario\n no disco serao perdidos.\n\n Para a maioria dos usuarios Home Desktop, este recurso nao e necessario.\n Entao se  deseja desabilitar esse recurso.'
	echo -e '\n Digite (C) para continuar.'
	echo -e '\b Digite (O) para Voltar ao menu principal de "Aplicativos Opcionais".'
	echo -e '\b Digite (Q) para terminar e sair da configuracao.'
read opcao
case $opcao in
	C) ConvidadoDes0 ;;
	O) Opcional1 ;;
	Q) Sair ;;
	*) "Opcao invalida" ; echo  ; ConvidadoDes ;;
esac
}
ConvidadoDes0() {
	clear
	echo -e '\n Desativando Usuario "Convidado".\n'
	read -t 5
sudo sh -c 'echo "allow-guest=false" >> /etc/lightdm/lightdm.conf'
echo -e '\n Conta ocultada, para o ativar novamente edite o arquivo\n /etc/lightdm/lightdm.conf\n\n E comente a linha allow-guest=false'
	clear
	echo -e '\n Espere 30 segundos ou aperte "Enter".'
	read -t 30
	clear
	ConvidadoDes1
}
ConvidadoDes1() {
	clear
	echo -e '\n Configuracao da conta "Convidado" concluida.'
	echo -e '\b Deve-se reiniciar para surtir o efeito.\n'
	echo -e '\b Digite (O) para Voltar ao menu principal de "Aplicativos Opcionais".'
	echo -e '\b Digite (Q) para terminar e sair da configuracao.'
read opcao
case $opcao in
	O) Opcional1 ;;
	Q) Sair ;;
	*) "Opcao invalida" ; echo  ; Continuar1 ;;
esac
}
Sair() {
	clear
	echo -e '\n Saindo da configuracao...'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	exit 0
}
RemotoDes() {
	clear
	echo -e '\n Desativar Usuario "Remoto".\n'
	echo -e '\b O "Acesso remoto" na tela de login esta habilitado por padrao desde\n o Ubuntu 12.10, atraves dessa opcao e possivel acessar um servidor\n remoto sem a necessidade de logar primeiro na maquina.\n Para a maioria dos usuarios Home Desktop, este recurso nao e necessario.\n Entao se deseja desabilitar esse recurso.'
	echo -e '\n Digite (C) para continuar.'
	echo -e '\b Digite (O) para Voltar ao menu principal de "Aplicativos Opcionais".'
	echo -e '\b Digite (Q) para terminar e sair da configuracao.'
read opcao
case $opcao in
	C) RemotoDes0 ;;
	O) Opcional1 ;;
	Q) Sair ;;
	*) "Opcao invalida" ; echo  ; RemotoDes ;;
esac
}
RemotoDes0() {
	clear
	echo -e '\n Desativando Usuario "Convidado".\n'
	read -t 5
sudo sh -c 'echo "greeter-show-remote-login=false" >> /etc/lightdm/lightdm.conf'
echo -e '\n Conta desativada. Para o ativar novamente edite o arquivo\n /etc/lightdm/lightdm.conf\n\n E comente a linha greeter-show-remote-login=false'
	clear
	echo -e '\n Espere 30 segundos ou aperte "Enter".'
	read -t 30
	clear
	RemotoDes1
}
RemotoDes1() {
	clear
	echo -e '\n Configuracao da conta "Remota" concluida.'
	echo -e '\b Deve-se reiniciar para surtir o efeito.\n'
	echo -e '\b Digite (O) para Voltar ao menu principal de "Aplicativos Opcionais".'
	echo -e '\b Digite (Q) para terminar e sair da configuracao.'
read opcao
case $opcao in
	O) Opcional1 ;;
	Q) Sair ;;
	*) "Opcao invalida" ; echo  ; Continuar1 ;;
esac
}
Sair() {
	clear
	echo -e '\n Saindo da configuracao...'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	exit 0
}
KernelsPurge() {
	clear
	echo -e '\n Adicionar comando "purge-kernels-antigos".\n'
	echo -e '\b Conforme vamos atualizando o sistema e consequentemente o Kernel, com o passar\n do tempo acumula-se as versoes antigas que acabam apenas ocupando espaco no HD.\n Para "limpar" o sistema com pacotes de versoes de Kernels antigos, basta\n adicionar este comando criado no sistema e o executar sempre que necessario.\n Lembre de testar o novo Kernel e ter certeza de que funciona corretamente antes de remover os antigos e tome muito cuidado.'
	echo -e '\n Digite (C) para continuar e adicionar o comando ao sistema.'
	echo -e '\b Digite (O) para Voltar ao menu principal de "Aplicativos Opcionais".'
	echo -e '\b Digite (Q) para terminar e sair da configuracao.'
read opcao
case $opcao in
	C) KernelsPurge0 ;;
	O) Opcional1 ;;
	Q) Sair ;;
	*) "Opcao invalida" ; echo  ; KernelsPurge ;;
esac
}
KernelsPurge0() {
	clear
	echo -e '\n Adicionando comando "purge-kernels-antigos".\n'
	read -t 5
sudo sh -c 'touch /usr/bin/purge-kernels-antigos'
sudo sh -c 'rm -r /usr/bin/purge-kernels-antigos'
sudo sh -c 'touch /usr/bin/purge-kernels-antigos'
sudo sh -c 'chmod 777 /usr/bin/purge-kernels-antigos'
sudo sh -c 'cat > /usr/bin/purge-kernels-antigos' <<EOF
#!/bin/bash
dpkg -l 'linux-*' | sed '/^ii/!d;/'"\$(uname -r | sed "s/\(.*\)-\([^0-9]\+\)/\1/")"'/d;s/^[^ ]* [^ ]* \([^ ]*\).*/\1/;/[0-9]/!d' | xargs sudo apt-get -y purge
EOF
sudo sh -c 'chmod 755 /usr/bin/purge-kernels-antigos'
	clear
	echo -e '\n Espere 30 segundos ou aperte "Enter".'
	read -t 30
	clear
	KernelsPurge1
}
KernelsPurge1() {
	clear
	echo -e '\n Adicao do comando "purge-kernels-antigos" concluida.'
	echo -e '\b Este comando esta por sua propria conta e risco, tenha cuidado.\n'
	echo -e '\b Digite (O) para Voltar ao menu principal de "Aplicativos Opcionais".'
	echo -e '\b Digite (Q) para terminar e sair da configuracao.'
read opcao
case $opcao in
	O) Opcional1 ;;
	Q) Sair ;;
	*) "Opcao invalida" ; echo  ; Continuar1 ;;
esac
}
Sair() {
	clear
	echo -e '\n Saindo da configuracao...'
	echo -e '\b Espere 30 segundos ou aperte "Enter".'
	read -t 30
	exit 0
}
Opcional1
